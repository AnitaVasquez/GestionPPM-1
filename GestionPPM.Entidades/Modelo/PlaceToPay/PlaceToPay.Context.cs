//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GestionPPM.Entidades.Modelo.PlaceToPay
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class PlaceToPay : DbContext
    {
        public PlaceToPay()
            : base("name=PlaceToPay")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<MidsComercioPlaceToPay> MidsComercioPlaceToPay { get; set; }
        public virtual DbSet<ComercioPlaceToPay> ComercioPlaceToPay { get; set; }
        public virtual DbSet<TrackingFasesComercio> TrackingFasesComercio { get; set; }
        public virtual DbSet<CargaMasivaMIDS> CargaMasivaMIDS { get; set; }
    
        public virtual ObjectResult<ComercioPlaceToPayInfo> ListadoComercioPlaceToPay(Nullable<long> pagenum, string searchText, string filtro)
        {
            var pagenumParameter = pagenum.HasValue ?
                new ObjectParameter("pagenum", pagenum) :
                new ObjectParameter("pagenum", typeof(long));
    
            var searchTextParameter = searchText != null ?
                new ObjectParameter("searchText", searchText) :
                new ObjectParameter("searchText", typeof(string));
    
            var filtroParameter = filtro != null ?
                new ObjectParameter("filtro", filtro) :
                new ObjectParameter("filtro", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ComercioPlaceToPayInfo>("ListadoComercioPlaceToPay", pagenumParameter, searchTextParameter, filtroParameter);
        }
    
        public virtual ObjectResult<TrackingPPMFasesComercioInfo> ConsultarTrackingPPMFasesComercio(Nullable<int> iDComercioPlaceToPay, string rUC)
        {
            var iDComercioPlaceToPayParameter = iDComercioPlaceToPay.HasValue ?
                new ObjectParameter("IDComercioPlaceToPay", iDComercioPlaceToPay) :
                new ObjectParameter("IDComercioPlaceToPay", typeof(int));
    
            var rUCParameter = rUC != null ?
                new ObjectParameter("RUC", rUC) :
                new ObjectParameter("RUC", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TrackingPPMFasesComercioInfo>("ConsultarTrackingPPMFasesComercio", iDComercioPlaceToPayParameter, rUCParameter);
        }
    
        public virtual ObjectResult<SeguimientoComercioPlaceToPayInfo> ListadoSeguimientoComercioPlaceToPay(Nullable<long> pagenum, string searchText, string filtro)
        {
            var pagenumParameter = pagenum.HasValue ?
                new ObjectParameter("pagenum", pagenum) :
                new ObjectParameter("pagenum", typeof(long));
    
            var searchTextParameter = searchText != null ?
                new ObjectParameter("searchText", searchText) :
                new ObjectParameter("searchText", typeof(string));
    
            var filtroParameter = filtro != null ?
                new ObjectParameter("filtro", filtro) :
                new ObjectParameter("filtro", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SeguimientoComercioPlaceToPayInfo>("ListadoSeguimientoComercioPlaceToPay", pagenumParameter, searchTextParameter, filtroParameter);
        }
    
        public virtual ObjectResult<ReporteExcelMidsNuevosInfo> ReporteExcelMidsNuevos()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ReporteExcelMidsNuevosInfo>("ReporteExcelMidsNuevos");
        }
    
        public virtual ObjectResult<ReporteExcelMidsOperacionesInfo> ReporteExcelMidsOperaciones()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ReporteExcelMidsOperacionesInfo>("ReporteExcelMidsOperaciones");
        }
    }
}
